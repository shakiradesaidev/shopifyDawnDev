{{ 'template-collection.css' | asset_url | stylesheet_tag }}
{{ 'component-loading-overlay.css' | asset_url | stylesheet_tag }}
{{ 'component-card.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-product-grid.css' | asset_url | stylesheet_tag }}

<link rel="preload" href="{{ 'component-rte.css' | asset_url }}" as="style" onload="this.onload=null;this.rel='stylesheet'">

<noscript>{{ 'component-rte.css' | asset_url | stylesheet_tag }}</noscript>

{%- if section.settings.enable_filtering or section.settings.enable_sorting -%}
  {{ 'component-facets.css' | asset_url | stylesheet_tag }}
  <script src="{{ 'facets.js' | asset_url }}" defer="defer"></script>

  <div class="page-width" id="main-collection-filters" data-id="{{ section.id }}">
    {% render 'facets', results: collection, enable_filtering: section.settings.enable_filtering, enable_sorting: section.settings.enable_sorting, collapse_on_larger_devices: section.settings.collapse_on_larger_devices %}
  </div>
{%- endif -%}

<div id="ProductGridContainer ttt">
  {%- paginate collection.products by section.settings.products_per_page -%}
    {%- if collection.products.size == 0 -%}
      <div class="collection collection--empty page-width" id="product-grid" data-id="{{ section.id }}">
        <div class="loading-overlay gradient"></div>
        <div class="title-wrapper center">
          <h2 class="title title--primary">
            {{ 'sections.collection_template.empty' | t }}<br>
            {{ 'sections.collection_template.use_fewer_filters_html' | t: link: collection.url, class: "underlined-link link" }}
          </h2>
        </div>
      </div>
    {%- else -%}
      <div class="collection page-width">
        <div class="loading-overlay gradient"></div>

    {% comment %}  <ul id="product-grid" data-id="{{ section.id }}" class="
          grid grid--2-col negative-margin product-grid
          {% if collection.products_count < 4 %} grid--{{ collection.products_count }}-col-tablet{% else %}
            {% if collection.products_count == 4 %} grid--4-col-desktop{% else %} grid--3-col-tablet grid--one-third-max grid--4-col-desktop grid--quarter-max{% endif %}
          {% endif %}">
          {%- for product in collection.products -%}
            <li class="grid__item">
              {% render 'product-card',
                product_card_product: product,
                media_size: section.settings.image_ratio,
                show_secondary_image: section.settings.show_secondary_image,
                add_image_padding: section.settings.add_image_padding,
                show_vendor: section.settings.show_vendor,
                show_image_outline: section.settings.show_image_outline,
                show_rating: section.settings.show_rating
              %}
             <select class="variant-selector">
        {% for variant in product.variants %}
            <option data-variant-id="{{ variant.id }}" data-variant-price="{{ variant.price }}">
                {{ variant.title }}
            </option>
        {% endfor %}
    </select>
    
    <span class="product-price">Price: <span class="selected-variant-price">{{ product.price | money }}</span></span>
    
    <button class="add-to-cart" data-product-id="{{ product.id }}">Add to Cart</button>
            </li>
          {%- endfor -%}
        </ul>
{% endcomment %}
        {%- if paginate.pages > 1 -%}
          {% render 'pagination', paginate: paginate, anchor: '' %}
        {%- endif -%}
      </div>
    {%- endif -%}
  {%- endpaginate -%}
</div>


{%- for product in collection.products -%}
  <li class="grid__item">
    <div class="product-card">

 {% render 'product-card',
                product_card_product: product,
                media_size: section.settings.image_ratio,
                show_secondary_image: section.settings.show_secondary_image,
                add_image_padding: section.settings.add_image_padding,
                show_vendor: section.settings.show_vendor,
                show_image_outline: section.settings.show_image_outline,
                show_rating: section.settings.show_rating
              %}
      <select class="variant-selector">
        {%- for variant in product.variants -%}
          <option
            value="{{ variant.id }}"
            data-variant-price="{{ variant.price }}"
          >
            {{ variant.title }}
          </option>
        {%- endfor -%}
      </select>
      <span class="product-price">
        Price: <span class="selected-variant-price"></span>
      </span>
      <button class="add-to-cart">
        Add to Cart
      </button>
    </div>
  </li>
{%- endfor -%}
{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "spaced-section collection-grid-section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 24,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "add_image_padding",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.add_image_padding.label"
    },
    {
      "type": "checkbox",
      "id": "show_image_outline",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.show_image_outline.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "checkbox",
      "id": "collapse_on_larger_devices",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.collapse_on_larger_devices.label"
    }
  ]
}
{% endschema %}
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const productCards = document.querySelectorAll(".product-card");

    productCards.forEach(productCard => {
      const variantSelector = productCard.querySelector(".variant-selector");
      const selectedVariantPrice = productCard.querySelector(".selected-variant-price");
      const addToCartButton = productCard.querySelector(".add-to-cart");

      if (variantSelector && selectedVariantPrice && addToCartButton) {
        variantSelector.addEventListener("change", function() {
          const selectedOption = variantSelector.options[variantSelector.selectedIndex];
          if (selectedOption) {
            const selectedVariantPriceValue = selectedOption.getAttribute("data-variant-price");
            selectedVariantPrice.textContent = selectedVariantPriceValue;
          }
        });

        addToCartButton.addEventListener("click", function() {
          const selectedOption = variantSelector.options[variantSelector.selectedIndex];
          if (selectedOption) {
            const selectedVariantId = selectedOption.value; // Get the selected variant ID
            // You can add custom JavaScript here to handle adding the selected variant to the cart.
            // You may need to make an AJAX call to Shopify's cart API or use other methods.
          }
        });
      }
    });
  });
</script>


<!-- Include this script in your Shopify theme where needed -->
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const productCards = document.querySelectorAll(".product-card");

    productCards.forEach(productCard => {
      const variantSelector = productCard.querySelector(".variant-selector");
      const addToCartButton = productCard.querySelector(".add-to-cart");

      if (variantSelector && addToCartButton) {
        addToCartButton.addEventListener("click", function() {
          const selectedVariantId = variantSelector.value; // Get the selected variant ID
          const quantity = 1; // You can change the quantity if needed

          // Make an AJAX request to add the product to the cart
          fetch("/cart/add.js", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              id: selectedVariantId,
              quantity: quantity,
            }),
          })
            .then(response => response.json())
            .then(data => {
              // Handle the response, e.g., show a success message or redirect to the cart page
              // You can customize this part as needed
              window.location.href = "/cart"; // Redirect to the cart page
            })
            .catch(error => {
              // Handle errors, e.g., show an error message to the user
              console.error("Error adding to cart:", error);
            });
        });
      }
    });
  });
</script>

